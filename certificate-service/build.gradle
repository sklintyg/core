plugins {
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.sonarqube' version '4.4.1.3373'
	id "org.owasp.dependencycheck" version "9.0.9"
	id 'test-report-aggregation'
	id 'application'
}

ext {
	guavaVersion = '33.0.0-jre'
	logbackEcsEncoderVersion = '1.6.0'
	springbootMavenBomVersion = '3.2.2'

	ineraMavenRepository = 'https://nexus.drift.inera.se/repository/it-public/'
	nvdMirror = 'https://vulnz-nvd-mirror-devtest.intyg.nordicmedtest.se'
}

group = 'se.inera.intyg.certificateservice'
version = System.properties['buildVersion'] ?: '0.0.1-SNAPSHOT'
mainClassName = 'se.inera.intyg.certificateservice.CertificateServiceApplication'

sonar {
	properties {
		property "sonar.projectKey", "intyg-certificate-service"
		property "sonar.projectName", "intyg-certificate-service"
		property "sonar.dependencyCheck.htmlReportPath", "${buildDir}/reports/dependency-check-report.html"
		property "sonar.dependencyCheck.jsonReportPath", "${buildDir}/reports/dependency-check-report.json"
	}
}

allprojects {
	repositories {
		mavenLocal()
		maven { url "${ineraMavenRepository}" }
		mavenCentral()
	}
}

dependencyCheck {
	formats = List.of("HTML", "JSON")

	nvd {
		datafeedUrl="${nvdMirror}"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'jacoco'
	apply plugin: 'org.sonarqube'
	apply plugin: 'org.owasp.dependencycheck'

	sourceCompatibility = '17'
	targetCompatibility = '17'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
		}
	}

	jacocoTestReport {
		dependsOn test

		reports {
			xml.required = true
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}

		afterEvaluate {
			classDirectories.setFrom(files(classDirectories.files.collect {
				fileTree(dir: it, exclude: [
						"**/testability/**",
						"**/integrationtest/**"
				])
			}))
		}
	}

	sonar {
		properties {
			property "sonar.exclusions", "**/testability/**,**/integrationtest/**"
		}
	}
}

reporting {
	reports {
		integrationTestAggregateTestReport(AggregateTestReport) {
			testType = TestSuiteType.INTEGRATION_TEST
		}
	}

	dependencies {
		testReportAggregation project(':app')
		testReportAggregation project(':domain')
		testReportAggregation project(':integration-test')
	}
}
