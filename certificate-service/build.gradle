plugins {
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version '5.1.0.4882'
    id "org.owasp.dependencycheck" version "10.0.4"
    id 'test-report-aggregation'
    id 'application'
}

ext {
    cxfVersion = "4.0.5"
    cxfPluginVersion = "4.0.0"
    jaxb2NamespacePrefixVersion = "2.0"
    jakartaWsVersion = "4.0.2"
    guavaVersion = '33.0.0-jre'
    logbackEcsEncoderVersion = '1.6.0'
    springbootMavenBomVersion = '3.3.4'
    testContainersMysqlVersion = '1.20.2'
    testContainersActivemqVersion = '1.20.2'
    mockServerClientVersion = '5.15.0'
    schematronVersion = '8.0.3'
    ineraMavenRepository = 'https://nexus.drift.inera.se/repository/it-public/'
    nvdMirror = 'https://vulnz-nvd-mirror-devtest.intyg.nordicmedtest.se'
}

group = 'se.inera.intyg.certificateservice'
version = System.properties['buildVersion'] ?: '0.0.1-SNAPSHOT'
mainClassName = 'se.inera.intyg.certificateservice.CertificateServiceApplication'

sonar {
    properties {
        property "sonar.projectKey", "intyg-certificate-service"
        property "sonar.projectName", "intyg-certificate-service"
        property "sonar.dependencyCheck.jsonReportPath", "${layout.buildDirectory.get()}/reports/dependency-check-report.json" as String
        property "sonar.dependencyCheck.htmlReportPath", "${layout.buildDirectory.get()}/reports/dependency-check-report.html" as String
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "${ineraMavenRepository}" }
        mavenCentral()
    }
}

dependencyCheck {
    formats = List.of("HTML", "JSON")
    nvd.setDatafeedUrl(nvdMirror)
    analyzers.setAssemblyEnabled(false)
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = '21'
    targetCompatibility = '21'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "**/testability/**",
                        "**/integrationtest/**"
                ])
            }))
        }
    }

    sonar {
        properties {
            property "sonar.exclusions", "**/testability/**,**/integrationtest/**"
        }
    }
}

reporting {
    reports {
        integrationTestAggregateTestReport(AggregateTestReport) {
            testType = TestSuiteType.INTEGRATION_TEST
        }
    }

    dependencies {
        testReportAggregation project(':app')
        testReportAggregation project(':domain')
        testReportAggregation project(':integration-test')
    }
}
