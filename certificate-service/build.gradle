plugins {
    alias(libs.plugins.org.springframework.boot)
    alias(libs.plugins.org.sonarqube)
    alias(libs.plugins.org.owasp.dependencycheck)
    alias(libs.plugins.com.github.ben.manes.versions)
    id 'test-report-aggregation'
    id 'application'
}

ext {
    cxfVersion = "4.1.0"
    cxfPluginVersion = "4.1.0"

    bomVersion = System.properties['bomVersion'] ?: '0.0.1-SNAPSHOT'
    ineraMavenRepository = 'https://nexus.drift.inera.se/repository/it-public/'
    nvdMirror = 'https://vulnz-nvd-mirror-devtest.intyg.nordicmedtest.se'
}

group = 'se.inera.intyg.certificateservice'
version = System.properties['buildVersion'] ?: '0.0.1-SNAPSHOT'
mainClassName = 'se.inera.intyg.certificateservice.CertificateServiceApplication'

sonar {
    properties {
        property "sonar.projectKey", "intyg-certificate-service"
        property "sonar.projectName", "intyg-certificate-service"
        property "sonar.dependencyCheck.jsonReportPath", "${layout.buildDirectory.get()}/reports/dependency-check-report.json" as String
        property "sonar.dependencyCheck.htmlReportPath", "${layout.buildDirectory.get()}/reports/dependency-check-report.html" as String
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "${ineraMavenRepository}" }
        mavenCentral()
    }
}

dependencyCheck {
    formats = List.of("HTML", "JSON")
    nvd.setDatafeedUrl(nvdMirror)
    analyzers.setAssemblyEnabled(false)
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = '21'
    targetCompatibility = '21'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation platform("se.inera.intyg.bom:platform:${bomVersion}")
        annotationProcessor platform("se.inera.intyg.bom:platform:${bomVersion}")
        testAnnotationProcessor platform("se.inera.intyg.bom:platform:${bomVersion}")
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "**/testability/**",
                        "**/integrationtest/**"
                ])
            }))
        }
    }

    sonar {
        properties {
            property "sonar.exclusions", "**/testability/**,**/integrationtest/**"
        }
    }
}

reporting {
    reports {
        integrationTestAggregateTestReport(AggregateTestReport) {
            testType = TestSuiteType.INTEGRATION_TEST
        }
    }

    dependencies {
        testReportAggregation project(':app')
        testReportAggregation project(':domain')
        testReportAggregation project(':integration-test')
    }
}
