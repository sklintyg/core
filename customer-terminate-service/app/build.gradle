plugins {
    id 'org.springframework.boot' version '3.3.4'
}

def applicationDir = "${rootProject.projectDir}/devops/dev"

dependencies {
    implementation project(':domain')
    implementation project(':logging')

    implementation "co.elastic.logging:logback-ecs-encoder:${logbackEcsEncoderVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-spring:${shedlockVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-provider-redis-spring:${shedlockVersion}"
    implementation "net.lingala.zip4j:zip4j:${zip4jVersion}"
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    implementation "org.springdoc:springdoc-openapi-data-rest:${springDocVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.liquibase:liquibase-core'
    implementation 'redis.clients:jedis'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.netty:netty-all'
    runtimeOnly 'org.eclipse.angus:jakarta.mail'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform {
    }
}

bootRun {
    systemProperty("spring.profiles.active", "testability,dev")
    systemProperty("application.dir", "${applicationDir}")
    systemProperty("spring.config.additional-location", "file:${applicationDir}/config/")
}

tasks.register("appRunDebug") {
    println("######## Running in Debug mode ########")
    doFirst {
        bootRun.configure {
            jvmArgs = [
                    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=18011",
                    "-Dlogging.config=${applicationDir}/config/logback-spring.xml"
            ]
        }
    }
    finalizedBy("bootRun")
}

tasks.register("appRun") {
    println("######## Running in normal mode ########")
    doFirst {
        bootRun.configure {
            jvmArgs = ["-Dlogging.config=${applicationDir}/config/logback-spring.xml"]
        }
    }
    finalizedBy("bootRun")
}