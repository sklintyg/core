plugins {
    id 'org.springframework.boot' version '3.4.0'
}

def applicationDir = "${rootProject.projectDir}/devops/dev"

dependencies {
    implementation project(':domain')

    implementation "co.elastic.logging:logback-ecs-encoder:${logbackEcsEncoderVersion}"
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
//    testImplementation testFixtures(project(":domain"))

//    testFixturesCompileOnly 'jakarta.persistence:jakarta.persistence-api'
//    testFixturesImplementation testFixtures(project(":domain"))
}

tasks.named('test') {
    useJUnitPlatform {
    }
}

bootRun {
    systemProperty("application.dir", "${rootProject.projectDir}/devops/dev")
    systemProperty("spring.profiles.active", "testability,dev")
    systemProperty("spring.config.additional-location", "file:${applicationDir}/config/")
}

tasks.register("appRunDebug") {
    println("######## Running in Debug mode ########")
    doFirst {
        bootRun.configure {
            jvmArgs = [
                    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=18031",
                    "-Dlogging.config=${rootProject.projectDir}/devops/dev/config/logback-spring.xml",
            ]
        }
    }
    finalizedBy("bootRun")
}

tasks.register("appRun") {
    println("######## Running in normal mode ########")
    doFirst {
        bootRun.configure {
            jvmArgs = ["-Dlogging.config=${rootProject.projectDir}/devops/dev/config/logback-spring.xml"]
        }
    }
    finalizedBy("bootRun")
}