tasks.register('downloadTailwindCSS') {
    doLast {
        String tailwindCSSFilePath = "${layout.buildDirectory.get()}/resources/main/templates/tailwindCSS.js"
        File file = new File(tailwindCSSFilePath)
        if (!file.exists()) {
            URI.create("https://cdn.tailwindcss.com/${tailwindCssVersion}").toURL().withInputStream {
                i -> file.withOutputStream { it << i }
            }
        }
    }
}

processResources {
    finalizedBy downloadTailwindCSS
}

dependencies {
    implementation project(":pdf-generator-api")
    implementation "com.microsoft.playwright:playwright:${playwrightVersion}"
    implementation "org.apache.commons:commons-pool2"
    implementation "org.jsoup:jsoup:${jsoupVersion}"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.boot:spring-boot-devtools"
    implementation "org.springframework.boot:spring-boot-starter"

    implementation ("org.apache.pdfbox:pdfbox:${pdfBoxVersion}") {
        exclude group: "commons-logging", module: "commons-logging"
    }

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
}

test {
    useJUnitPlatform()
}